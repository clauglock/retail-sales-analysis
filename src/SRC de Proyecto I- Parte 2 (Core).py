{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1WEhEyNuXBpsnHuabFRkQGsP3FiP5P0BL","timestamp":1749849563397}],"authorship_tag":"ABX9TyM9JeqKFmUMPrI5/DDtY/SI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":[],"metadata":{"id":"lLtjI6PblEHl"}},{"cell_type":"code","source":[],"metadata":{"id":"yIOsB4JbKQlM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Proyecto I- Parte 2 (Core)**\n","Análisis y Predicción de Ventas en una Tienda de Retail\n","\n","**Cargar los Datos**\n","Carga el archivo retail_sales.csv en un DataFrame de Pandas.\n","Muestra las primeras 10 filas del DataFrame para confirmar que los datos se han cargado correctamente.\n"],"metadata":{"id":"miTvy9D7lEMQ"}},{"cell_type":"code","source":["# Importamos librerias.\n","import numpy as np\n","import pandas as pd\n","from google.colab import drive # Importamos la libreria para montar Google Drive\n","\n","# Montar Google Drive\n","drive.mount('/content/drive')\n","\n","def cargar_datos(ruta_archivo):\n","    # Carga los datos del archivo CSV utilizando Pandas\n","    datos = pd.read_csv(ruta_archivo)\n","    return datos\n","\n","# Define la ruta del archivo fuera de la función\n","ruta_archivo =  \"/content/drive/MyDrive/Colab Notebooks/BD/retail_sales_dataset.csv\"\n","\n","# Llama a la función para cargar los datos y asigna el resultado a la variable 'df'\n","df = cargar_datos(ruta_archivo)\n","\n","\n","df.info()"],"metadata":{"id":"9KRKpYWAlFyq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head(10)"],"metadata":{"id":"TwKh4Wz1l7Ai"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Exploración Inicial de los Datos\n","Muestra las últimas 5 filas del DataFrame.\n","Utiliza el método info() para obtener información general sobre el DataFrame, incluyendo el número de entradas, nombres de las columnas, tipos de datos y memoria utilizada.\n","Genera estadísticas descriptivas del DataFrame utilizando el método describe()."],"metadata":{"id":"GeI5FMJXmG5X"}},{"cell_type":"code","source":["# Muestra las últimas 5 filas del DataFrame.\n","df.tail(5)\n"],"metadata":{"id":"sygrHnh1mIzS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Utiliza el método info() para obtener información general sobre el DataFrame, incluyendo el número de entradas, nombres de las columnas, tipos de datos y memoria utilizada.\n","df.info()"],"metadata":{"id":"ne-ksvufmUwI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#enera estadísticas descriptivas del DataFrame utilizando el método describe().\n","df.describe()"],"metadata":{"id":"inIiUK_wmbns"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Inspección de los Datos\n","Inspecciona los tipos de datos de cada columna utilizando el atributo dtypes.\n","Cuenta los valores únicos en la columna Producto utilizando el método value_counts().\n","Muestra todos los valores únicos en la columna Tienda utilizando el método unique()."],"metadata":{"id":"-jNxuK9jmpMc"}},{"cell_type":"code","source":[],"metadata":{"id":"kiaTgFYZm7to"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Inspección de los Datos Inspecciona los tipos de datos de cada columna utilizando el atributo dtypes\n","df.dtypes"],"metadata":{"id":"i2UM3wbAmsvy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Cuenta los valores únicos en la columna Producto utilizando el método value_counts()\n","df['Product Category'].value_counts()\n"],"metadata":{"id":"fXePURZmm9RG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Muestra todos los valores únicos en la columna Tienda utilizando el método unique().\n","df['Product Category'].unique()"],"metadata":{"id":"Oe84SGA1nSVF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Filtrado de Datos\n","Filtra el DataFrame para mostrar solo las filas donde las ventas (Ventas) sean mayores a 50.\n","Filtra el DataFrame para mostrar solo las filas donde el precio (Precio) sea menor a 0.5.\n","Utilizando el método query(), filtra el DataFrame para mostrar las filas donde el producto sea Manzanas y las ventas sean mayores a 30."],"metadata":{"id":"b973kHJQnk2f"}},{"cell_type":"code","source":["#Filtrado de Datos Filtra el DataFrame para mostrar solo las filas donde las ventas (Ventas) sean mayores a 50\n","df[df['Total Amount'] > 50]"],"metadata":{"id":"ucZp1ct8nmqI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Filtra el DataFrame para mostrar solo las filas donde el precio (Precio) sea menor a 0.5\n","df[df['Price per Unit'] < 0.5]"],"metadata":{"id":"0RMn0RuuoGoR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Utilizando el método query(), filtra el DataFrame para mostrar las filas donde el producto sea Manzanas y las ventas sean mayores a 30.\n","df.query('`Product Category` == \"Beauty\" and `Total Amount` > 30')\n","#Se modifica el campo a accesar"],"metadata":{"id":"6e6-DhH_oitX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Slicing de Datos**\n","Selecciona y muestra solo las columnas Producto y Ventas del DataFrame.\n","Utilizando loc[], selecciona y muestra las filas de la 5 a la 10 (inclusive) y las columnas Producto y Tienda.\n","Utilizando iloc[], selecciona y muestra las primeras 5 filas y las primeras 3 columnas del DataFrame."],"metadata":{"id":"oa0pVXp3o7mp"}},{"cell_type":"code","source":["#Selecciona y muestra solo las columnas Producto y Ventas del DataFrame\n","df[['Product Category', 'Total Amount']]\n"],"metadata":{"id":"f5mbu9Ibo6fw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Utilizando loc[], selecciona y muestra las filas de la 5 a la 10 (inclusive) y las columnas Producto y Tienda\n","df.loc[5:10, ['Product Category', 'Total Amount']]"],"metadata":{"id":"h5RrJENqpSK7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Utilizando iloc[], selecciona y muestra las primeras 5 filas y las primeras 3 columnas del DataFrame.\n","df.iloc[:5, :3]\n","\n"],"metadata":{"id":"IZNJw_Obpbj-"},"execution_count":null,"outputs":[]}]}